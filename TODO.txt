create-react-app client
=================================================
đặt exact trong App.js để render chính
 <Route exact path="/" component={Landing} />
=================================================

<Provider store={Store}>
        <BrowserRouter>
          <div className="App">
            <Navbar />
            <Landing />
            <Footer />
          </div>
        </BrowserRouter>
</Provider>

cái nào mutple nhét hết vào Route

<Provider store={Store}>
        <BrowserRouter>
          <div className="App">
            <Navbar />
            <Route exact path="/" component={Landing} />
            <Footer />
          </div>
        </BrowserRouter>
      </Provider>
========================================
import { withRouter } from "react-router-dom";
------------
 this.props.registerUser(newUser, this.props.history);
---------
this.pops.history("./link")
-----------
export default connect(
  mapStateToProps,
  mapDispatchToProps
)(withRouter(Register));

 //NHẢY SANG LINK MỚI  CÓ TRONG HISTORY /link
  nếu không cần nhảy redirect trong history thì không cần phải bao trong withRouter()
//======================================================
//EDIT PROFILE
// lấy dữ liệu từ GLOBALS STATE  
    componentDidMount() {
    this.props.getCurrentProfile();
  } 

// Truyền state sang props
  const mapStateToProps = state => ({
  profile: state.profile,
  errors: state.errors
});
  state được chuyển thành props => kích hoạt componentWillReceiveProps và trong đó ta dùng để set ngược lại giá trị cho state HIỆN TẠI của form
  
    componentWillReceiveProps(nextProps) {
    if (nextProps.errors) {
      this.setState({ errors: nextProps.errors });
    }

    if (nextProps.profile.profile) {
      const profile = nextProps.profile.profile;
      ........
    }

    // Set component fields state
      this.setState({
        ...
      })
  }


  ==========================
  sử dụng để format ngày trong react 
  yêu cầu yarn add moment react-moment
  import Moment from 'react-moment';
============================================
Lấy params "handle"
  if (this.props.match.params.handle) {
  .......
  }


  ===================================
NOT FOUND 
  componentWillReceiveProps(nextProps) {
    if (nextProps.profile.profile === null && this.props.profile.loading) {
      this.props.history.push('/not-found');
    }
  }


============================================
 Đặt Spinner
  if (post === null || loading || Object.keys(post).length === 0) {
      postContent = <Spinner />;
    } else {
      postContent = (
        <div>
          <PostItem post={post} showActions={false} />
          <CommentForm postId={post._id} />
          <CommentFeed postId={post._id} comments={post.comments} />
        </div>
      );
    }

====================================
Sử dụng params


    <Switch>
      <PrivateRoute exact path="/post/:id" component={Post} />
    </Switch>
--------------
  componentDidMount() {
    this.props.getPost(this.props.match.params.id);
  }

==================================================
Set default props

  PostItem.defaultProps = {
    showActions: true
  };